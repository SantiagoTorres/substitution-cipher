// contains defines for the count_words module

#include<stdio.h>
#include<stdlib.h>
#include<unistd.h>


#ifndef COUNT_WORDS_H
#define COUNT_WORDS_H

#define PRINTABLE_BEGIN 33
#define PRINTABLE_CHARACTERS 127-PRINTABLE_BEGIN
#define BUFFER_SIZE 1024

#define ALPHA_BEGIN 32
#define ALPHA_END 58
#define LOWERCASE_LOCATION 32

/* Data Structures */
typedef struct _weighted_character {
    char character;
    float weight;
} WEIGHTED_CHAR;

/* constants */

/* this is the default frequency table for english */
  
const WEIGHTED_CHAR ENGLISH_FREQUENCIES[26] = {
      {'E',12.6},
      {'T', 9.37},
      {'A', 8.34},
      {'O', 7.70},
      {'N', 6.80},
      {'I', 6.71},
      {'S', 6.11},
      {'H', 6.11},
      {'R', 5.68},
      {'L', 4.24},
      {'D', 4.14},
      {'U', 2.85},
      {'C', 2.73},
      {'M', 2.53},
      {'W', 2.34},
      {'Y', 2.04},
      {'F', 2.03},
      {'G', 1.92},
      {'P', 1.66},
      {'B', 1.54},
      {'V', 1.06},
      {'K', 0.87},
      {'J', 0.23},
      {'X', 0.20},
      {'Q', 0.09},
      {'Z', 0.06},
    };

/* function prototypes */
unsigned int * get_word_frequencies_from_file(char *filename, size_t *count);

void lowercase_statistics(unsigned int *character_instances);
void flatten_statistics_to_alpha(unsigned int *character_instances, 
        size_t *count);

void pp_frequency_table(unsigned int *character_instances, size_t count, 
        int cols);
void pp_alpha_frequency_table(unsigned int *character_instances, size_t count,
        int cols);


WEIGHTED_CHAR * alpha_frequency_table_to_weighted_char(
        unsigned int *character_instances, size_t count);

void quicksort_weighted_chars(WEIGHTED_CHAR *arr, int left, int right);

#endif 
